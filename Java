----------------------------------------------------------------------------------------------
Java:
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
What is Java?
----------------------------------------------------------------------------------------------
Java is a high-level programming language that makes use of OOP (Object-Oriented Programming) created in 1995 by Sun Microsystems.
----------------------------------------------------------------------------------------------
Key Features:
----------------------------------------------------------------------------------------------
- Platform Independence: Java programs are compiled into bytecode, which can be run on any device with a Java Virtual Machine (JVM). This makes Java highly portable.
- Object-Oriented: Java emphasizes OOP principles such as encapsulation, inheritance, and polymorphism, which makes it modular and reusable.
- Simple and Familiar: Java syntax is relatively simple and derives much of its syntax from C and C++, making it easy to learn for programmers familiar with these languages.
- Robust and Secure: Java has strong memory management and built-in security features to prevent issues like memory leaks and to provide a secure runtime environment.
- Multithreaded: Java supports multithreading, allowing concurrent execution of two or more threads for maximum utilization of CPU.
- High Performance: Although Java is an interpreted language, the use of Just-In-Time (JIT) compilers allows Java code to be executed with high performance.
- Java Development Kit (JDK) and Java Runtime Environment (JRE)
- JDK: The Java Development Kit includes tools for developing, debugging, and monitoring Java applications.
- JRE: The Java Runtime Environment includes the JVM, core classes, and supporting files needed to run Java applications.
----------------------------------------------------------------------------------------------
Basic Syntax:
----------------------------------------------------------------------------------------------
- Case Sensitivity: Java is case-sensitive, meaning that Hello and hello are different identifiers.
- Class Names: The first letter of each word in a class name should be capitalized. Example: MyFirstClass.
- Method Names: The first letter of each word in a method name should be lowercase, with subsequent words capitalized. Example: myFirstMethod.
- File Names: The file name should match the class name and have a .java extension. Example: MyFirstClass.java.
----------------------------------------------------------------------------------------------
Java Program Structure:
----------------------------------------------------------------------------------------------
A basic Java program consists of the following structure:
----------
public class MyFirstClass {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
    }
}
---------
public class MyFirstClass: Defines a class named MyFirstClass.
public static void main(String[] args): The main method where the program starts execution.
System.out.println("Hello, World!");: Prints "Hello, World!" to the console.
----------------------------------------------------------------------------------------------
Comments
----------------------------------------------------------------------------------------------
Comments are used to explain code and are ignored by the compiler.

Single-line comments: Start with //.
Multi-line comments: Enclosed between /* and */.
Documentation comments: Enclosed between /** and */.
---------
Example:
// This is a single-line comment

/*
 * This is a multi-line comment
 */

/**
 * This is a documentation comment
 * used for generating documentation.
 */
---------
----------------------------------------------------------------------------------------------
Common Use Cases:
----------------------------------------------------------------------------------------------
Java is widely used in various domains, including:

- Web Applications: Java is used for building server-side applications with technologies like JavaServer Pages (JSP) and Servlets.
- Enterprise Applications: Java Enterprise Edition (Java EE) provides a robust, scalable environment for enterprise applications.
- Mobile Applications: Java is the primary language for Android app development.
- Desktop Applications: Java Swing and JavaFX are used for building cross-platform desktop applications.
- Embedded Systems: Java is used in a variety of embedded systems due to its portability and efficiency.
