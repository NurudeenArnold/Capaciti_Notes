---------------------------------------------
Python Notes:
---------------------------------------------
---------------------------------------------
Operators and Variables:
---------------------------------------------
"=" Assignment Operator
vairables cannot start with a number
"+" for string can be used to concatenate them
you cannot add string and numbers using "+"
data structures allows us to store a list of values in a single variable.
List = data structure, allows us to store multiple variable types, inc a list inside a list.
"List.length" can be used to determine the length of a list.
Tuples, Sets are similiar to lists, Tuples cannot be modified and sets contains unique elements and is declared using curly braces and accessed using keys.
Operators are instuctions that perform operations on variables and values in python.
arithmetic operator is most common and used for mathematical calculations.
"*" is used to multiply 
exponent operator used to raise a number to a power.
"/" is used to divide.
"%" is used to divide and return the remainder, it is called modulus.
"*" in context of a string var can multiply the string to repeat multiple times.
Logical operators = AND, OR, NOT.
AND = both values are true, 
OR = atleast one values is true,
NOT = will flip the boolean value, so if it's true, NOT will makes it false
Membership operators = "in" and "not in" is to check is value exist in a sequence or not. 
EXAMPLE:
if 3 in my_list:
    print("3 is present in the list")
else:
    print("3 is not present in the list")
---
---------------------------------------------
Control Flow:
---------------------------------------------
If statment is one of three main types on control flow, it allows us to execute a block of code only if a certain condition is met.
for loop can be used to iterate an object,
EXAMPLE:
for item in my_list: 
    print item
---
while loop will iterate until a condition is false,
EXAMPLE:
a = 0 
while a < 5: 
    print a, a = a + 1
---
It is important the value you using in a while loop will return false eventually or it will be an infinite loop.
---------------------------------------------
Functions:
---------------------------------------------
"def" keyword is used to declare functions, eg, def my_fun(argument)
"return" keyword is used to specify the output.
to call the function you would type the name and the parenthesis, and inside the requred vars if it takes any.
---------------------------------------------
Classes and Objects:
---------------------------------------------
Why we use classes:
Organization, Abstraction, Reusability, Inheritance and Polymorphism.
EXAMPLE:
# Define class
class Dog:
    def __init__(self, name, legs=4):
        self.name = name
        self.legs = legs

    def speak(self):
        print("Woof!")

# Creating instances of the Dog class
dog1 = Dog("Rover")
dog2 = Dog("Buddy", legs=3)

# Accessing attributes and calling methods
print(f"{dog1.name} has {dog1.legs} legs.") OUTPUT: Rover has 4 legs. Woof!
dog1.speak()

print(f"{dog2.name} has {dog2.legs} legs.") OUTPUT: Buddy has 3 legs. Woof!
dog2.speak()
---
create an instance of a class = creating an object of that class. In the exmaple, the objects would be:
dog1 and dog2
---------------------------------------------
Random:
---------------------------------------------
When assigning 2 variables to one another, they will use the same memory allocation.
print("Hello World") #This will print "Hello World".
print keyword to print to console/terminal.
"#" is used to make inline comments
INDENTATION is VERY important in python.
